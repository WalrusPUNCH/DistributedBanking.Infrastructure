version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
    #volumes:
    #  - ./volumes/zookeeper:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_LOG_DIRS: /logs
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS_SEPARATOR: " "
      KAFKA_CREATE_TOPICS: >
        roles.creation:1:1:delete
        customers.registration:1:1:delete
        customers.update:1:1:delete
        workers.registration:1:1:delete
        users.deletion:1:1:delete
        accounts.creation:1:1:delete
        accounts.deletion:1:1:delete
        transactions.creation:1:1:delete
    #volumes:
    #  - ./volumes/kafka:/logs
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 30s
      retries: 5

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: distributed_banking
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
